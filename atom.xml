<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>王石坚的博客</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-02-03T08:23:04.215Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>王石坚</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>MySQL学习笔记</title>
    <link href="http://yoursite.com/2019/02/03/MySQL%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>http://yoursite.com/2019/02/03/MySQL学习笔记/</id>
    <published>2019-02-03T08:22:27.000Z</published>
    <updated>2019-02-03T08:23:04.215Z</updated>
    
    <content type="html"><![CDATA[<p>MySQL是非常流行的开源关系型数据库，开发工作必备。</p><a id="more"></a><p>我是跟着<a href="https://www.imooc.com/learn/122" target="_blank" rel="noopener">慕课网的教程</a>重新又过了一遍MySQL的知识，以下是笔记。</p><h2 id="MySQL环境配置"><a href="#MySQL环境配置" class="headerlink" title="MySQL环境配置"></a>MySQL环境配置</h2><p>Windows下环境的配置，我们需要<a href="https://dev.mysql.com/downloads/file/?id=480490" target="_blank" rel="noopener">MySQL下载链接</a> ，可以看看此篇环境配置<a href="https://blog.csdn.net/weixin_38239039/article/details/79629984" target="_blank" rel="noopener">参考文档</a>。<br>安装完成之后，需要注意两点：</p><ol><li><p>配置文件<br>bin 目录下有个config.exe，可以启用配置。配置文件其实是写在当前路径的my.ini 中。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[mysql]</span><br><span class="line">default-character-set=utf8</span><br><span class="line">[mysqld]</span><br><span class="line">character-set-server=utf8</span><br></pre></td></tr></table></figure></li><li><p>启动服务<br>在Windows中，会存在MYSQL的服务启动和停止mysql，记得以管理员权限运行cmd</p><figure class="highlight plain"><figcaption><span>start mysql</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">net start mysql</span><br><span class="line">net stop mysql</span><br></pre></td></tr></table></figure></li></ol><p>安装完成之后的目录结构：</p><ul><li>bin： 可执行目录</li><li>data ：存储数据文件，数据文件，索引文件</li><li>docs ：文档</li><li>include ：包含的头文件</li><li>lib:存储库文件</li><li>share : 错误消息和字符集文件</li></ul><p>安装完成之后的基本操作</p><ol><li>登录和退出</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mysql -V</span><br><span class="line">mysql -uroot -proot -P3306 -hlocalhost</span><br><span class="line">exit;</span><br><span class="line">quit;</span><br><span class="line">\q;</span><br></pre></td></tr></table></figure><ol><li>修改mysql提示符</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mysql -uroot -proot --prompt</span><br><span class="line">\h 主机名字 localhost</span><br><span class="line">\d 当前数据库</span><br><span class="line">\D 完整的日期</span><br><span class="line">\u 当前用户</span><br><span class="line">mysql&gt;prompt \h@\u</span><br></pre></td></tr></table></figure><ol><li>数据库命令查看当前版本，时间和用户。</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">SELECT VERSION();</span><br><span class="line">SELECT NOW();</span><br><span class="line">SELECT USER();</span><br></pre></td></tr></table></figure><p>MYSQL规范</p><ul><li>数据库、表、字段需要小写</li><li>关键字和函数名都是大写</li><li>SQL语句以分号结尾</li></ul><h2 id="数据库基本操作"><a href="#数据库基本操作" class="headerlink" title="数据库基本操作"></a>数据库基本操作</h2><p>创建数据库</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">CREATE &#123;DATABASE | SCHEMA&#125; [IF NOT EXISTS] db_name [DEFAULT] CHARACTER SET [=] charset_name;</span><br><span class="line">CREATE DATABASE IF NOT EXISTS test_db;</span><br></pre></td></tr></table></figure><p>查看数据库</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">SHOW DATABASES;</span><br><span class="line">SHOW WARNINGS;</span><br><span class="line">SHOW CREATE DATABASE test_db;</span><br></pre></td></tr></table></figure><p>修改数据库</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ALTER DATABASE test_db CHARACTER SET gbk;</span><br></pre></td></tr></table></figure><p>删除数据</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DROP DATABASE IF EXISTS test_db;</span><br></pre></td></tr></table></figure><h2 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h2><p>整形</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">TINYINT   1</span><br><span class="line">SMALLINT  2</span><br><span class="line">MEDIUMINT  3</span><br><span class="line">INT    4</span><br><span class="line">BIGINT   8</span><br></pre></td></tr></table></figure><p>浮点型</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">FLOAT[(M,D)]   M总的位数，D小数点后位数</span><br><span class="line">DOUBLE[(M,D)]</span><br></pre></td></tr></table></figure><p>日期时间</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">YEAR  1 </span><br><span class="line">TIME  3</span><br><span class="line">DATE  3</span><br><span class="line">DATETIME 8</span><br><span class="line">TIMESTAMP 4</span><br></pre></td></tr></table></figure><p>日期类型用TIMESTAMP<br>字符型</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">CHAR(M)</span><br><span class="line">VARCHAR(M)</span><br><span class="line">TINYTEXT</span><br><span class="line">TEXT</span><br></pre></td></tr></table></figure><h2 id="数据表的操作"><a href="#数据表的操作" class="headerlink" title="数据表的操作"></a>数据表的操作</h2><p>切换数据库</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">USE test_db;</span><br><span class="line">SELECT DATABASE();</span><br></pre></td></tr></table></figure><p>创建数据表</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">CREATE TABLE tb1(</span><br><span class="line">    username VARCHAR(20),</span><br><span class="line">    age TINYINT UNSIGNED,</span><br><span class="line">    salary FLOAT(8,2) UNSIGNED</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>查看数据表</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SHOW TABLES FROM mysql;</span><br></pre></td></tr></table></figure><p>查看数据表结构</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SHOW COLUMNS FROM tb1;</span><br></pre></td></tr></table></figure><p>插入记录</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">INSERT [INTO] tb1 [(col_name,....)] VALUES(val)</span><br><span class="line">INSERT INTO tb1 VALUES(&quot;Tom&quot;, 25, 9000.23);</span><br><span class="line">INSERT INTO tb1 (username, salary) VALUES(&quot;JACK&quot;, 10000);</span><br></pre></td></tr></table></figure><p>查找记录</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">SELECT expr FROM tbl;</span><br><span class="line">SELECT * FROM tb1;</span><br></pre></td></tr></table></figure><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>经过一段时间的学习，其实没有必要照着慕课网的教程全部记下来，不现实也没有必要，更重要的是在实践中学习和总结。</p><p>MySQL总结一下，我自己强化一下如下的知识点即可：</p><ol><li><p>MySQL 在windows的安装和使用，记得启动service</p></li><li><p>创建数据库，创建数据表</p><p>这里的重点是字段类型，以及字段的约束，创建数据表，涉及到表结构如何规划。</p></li><li><p>向表中编辑和添加数据，INSERT, UPDATE, DELETE, SELECT</p></li></ol><p>进阶一点的知识点</p><ol><li>物理外键和逻辑外键</li><li>数据库的表的连接</li><li>子查询</li></ol><p><a href="https://www.imooc.com/learn/122" target="_blank" rel="noopener">视频教程</a>提供实践的路线和实战经验。W3C的文字教程更为简练和准确，适合总结和查询。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;MySQL是非常流行的开源关系型数据库，开发工作必备。&lt;/p&gt;
    
    </summary>
    
      <category term="tech" scheme="http://yoursite.com/categories/tech/"/>
    
    
      <category term="mysql" scheme="http://yoursite.com/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>Javascript学习笔记</title>
    <link href="http://yoursite.com/2019/02/03/Javascript%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>http://yoursite.com/2019/02/03/Javascript学习笔记/</id>
    <published>2019-02-03T07:44:50.000Z</published>
    <updated>2019-02-03T07:49:11.945Z</updated>
    
    <content type="html"><![CDATA[<p>JavaScript是一种在浏览器解释执行的代码，网页开发必备。</p><a id="more"></a><p>一般放在script属性中。而script 放在body和head中都可以。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        </span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span> <span class="attr">onload</span>=<span class="string">"alert('hi');"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">            document.write("hello world!");</span></span><br><span class="line"><span class="undefined">        </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>一般来说，head中是JavaScript的函数声明和定义,body中一般是直接执行的JavaScript语句。document就是整个HTML文件对象。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">document</span>.write(<span class="string">"hello world"</span>);</span><br></pre></td></tr></table></figure><h2 id="语法点"><a href="#语法点" class="headerlink" title="语法点"></a>语法点</h2><ol><li>声明变量用var</li><li>对于习惯python的人，语句结束请不要忘了分号</li><li>JavaScript变量本身是没有类型，但是值是有类型的</li><li>值得类型有字符串，数值，布尔值，JavaScript不区别整数和浮点数</li><li>js脚本执行完成之后，才会执行docment.write()</li><li>javascript支持switch(){},支持if ，这方面几乎和C语言一样。</li></ol><h2 id="函数定义语法"><a href="#函数定义语法" class="headerlink" title="函数定义语法"></a>函数定义语法</h2><p>函数定义函数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">function add(a,b)&#123;</span><br><span class="line">    return a+b;</span><br><span class="line">&#125;</span><br><span class="line">c=add(a,b);</span><br></pre></td></tr></table></figure><p>函数变量，函数对象，类似于C语言的函数指针</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">var f = new Function(&quot;x&quot;,&quot;y&quot;,&quot;return x*y&quot;);</span><br><span class="line">等价于</span><br><span class="line">function f(x,y)&#123;return x*y;&#125;</span><br></pre></td></tr></table></figure><p>这样的好处是可以用数据来产生代码，是函数式编程的思想。对于已有的函数，尽可能在自己已有的函数上进行封装，避免函数的修改工作的繁琐。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">add</span>(<span class="params">a,b</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a+b;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">calc</span>(<span class="params">f,a,b</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> f(a,b);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>变量的作用域，定义在函数体外面的变量，整个页面都有效。函数内部，只有函数内有效。只有这两个层级，不存在像for{}之类的内部局部变量</p><h2 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> my_array = <span class="keyword">new</span> <span class="built_in">Array</span>()</span><br><span class="line"><span class="keyword">var</span> my_array = <span class="keyword">new</span> <span class="built_in">Array</span>(<span class="number">100</span>) <span class="comment">//这个size随时可以增长</span></span><br><span class="line"><span class="keyword">var</span> my_array = <span class="keyword">new</span> <span class="built_in">Array</span>(d1,d2)</span><br><span class="line"><span class="keyword">var</span> my_array = [d1, d2]</span><br><span class="line">my_array[<span class="number">0</span>] <span class="comment">//访问</span></span><br></pre></td></tr></table></figure><p>数组长度 my_array.length,length随时可以改，随时可以写，取决于最大的下标志，一个append的写法就是</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">my_array[my_array.length]=<span class="string">"hello"</span></span><br></pre></td></tr></table></figure><p>数组的一些使用</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> colors=[<span class="string">"red"</span>,<span class="string">"green"</span>,<span class="string">"blue];</span></span><br><span class="line"><span class="string">alert(colors.length)</span></span><br><span class="line"><span class="string">alert(colors.toString());</span></span><br><span class="line"><span class="string">alert(colors.valueOf());</span></span><br><span class="line"><span class="string">alert(colors);</span></span><br><span class="line"><span class="string">alert(colors.join("</span>.<span class="string">"));</span></span><br><span class="line"><span class="string">alert(colors.join("</span>||<span class="string">"));</span></span><br><span class="line"><span class="string">colors.push();</span></span><br><span class="line"><span class="string">colors.pop();</span></span><br><span class="line"><span class="string">colors.shift();</span></span><br><span class="line"><span class="string">colors.sort();</span></span><br><span class="line"><span class="string">colors.reverse();</span></span><br><span class="line"><span class="string">concat(colors, colors);将两个数组连起来</span></span><br><span class="line"><span class="string">colors.slice(1,4);切片</span></span><br></pre></td></tr></table></figure><p>可以给sort传一个自己的compare函数，来实现不同的排序</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">compare</span>(<span class="params">a,b</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (a&lt;b)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (a&gt;b)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (a==b)</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">my_array.sort(compare)</span><br></pre></td></tr></table></figure><p>函数splice（删除起始位置，删除个数，插入的元素。。。）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">splice(0,2)从第一个位置开始，删除两个元素</span><br><span class="line">splice(2,0,&quot;red&quot;)在第二个位置插入red</span><br><span class="line">splice(2,1,&quot;red&quot;)替换第二个元素为red</span><br></pre></td></tr></table></figure><h2 id="对象"><a href="#对象" class="headerlink" title="对象"></a>对象</h2><p>JavaScript的对象就各种属性值的集合。JavaScript严格来说不算OOP，没有类的概念，不强调先设计类再制造对象</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> o = <span class="keyword">new</span> <span class="built_in">Object</span>();</span><br><span class="line"><span class="keyword">var</span> circle = &#123;<span class="attr">x</span>:<span class="number">0</span>,<span class="attr">y</span>:<span class="number">0</span>,<span class="attr">radius</span>:<span class="number">10</span>&#125;;</span><br></pre></td></tr></table></figure><p>访问和删除属性</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> circle = &#123;<span class="attr">x</span>:<span class="number">0</span>, <span class="attr">y</span>:<span class="number">0</span>, <span class="attr">radius</span>:<span class="number">10</span>&#125;;</span><br><span class="line">alert(circle.x);</span><br><span class="line"><span class="keyword">delete</span> circle.x;</span><br><span class="line">circle.x = <span class="literal">null</span>;</span><br><span class="line">alert(circle.x);<span class="comment">//null</span></span><br></pre></td></tr></table></figure><p>遍历所有属性</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> e <span class="keyword">in</span> o)</span><br><span class="line">&#123;</span><br><span class="line">    alert(o[e]);<span class="comment">//属性值</span></span><br><span class="line">    alert(e);<span class="comment">//属性的名字</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>构造函数</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Rect</span>(<span class="params">w,h</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.width=w;</span><br><span class="line">    <span class="keyword">this</span>.height=h;</span><br><span class="line">    <span class="keyword">this</span>.area=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.width*<span class="keyword">this</span>.height;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> rect1 = <span class="keyword">new</span> Rect(<span class="number">2</span>,<span class="number">3</span>);</span><br><span class="line">alert(rect1.area());</span><br></pre></td></tr></table></figure><p>原型对象prototype，其实可以理解为类属性，高于对象属性的一种属性，只要你不去改写它，那么所有的这一对象的实例都一样的。</p><p>但是需要注意，一定是改写，而不是其他的操作。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Person</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    Person.prototype.name=<span class="string">"Nicholas"</span>;</span><br><span class="line">    Person.prototype.sayname=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        alert(<span class="keyword">this</span>.name);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> Nicholas=<span class="keyword">new</span> Person();</span><br><span class="line"><span class="keyword">var</span> xiaozhang=<span class="keyword">new</span> Person();</span><br><span class="line">xiaozhang.name=<span class="string">"xiaozhang"</span>;</span><br><span class="line">Nicholas.sayname();</span><br><span class="line">xiaozhang.sayname();</span><br><span class="line"><span class="keyword">delete</span> xiaozhang.name;</span><br><span class="line">xiaozhang.sayname();</span><br></pre></td></tr></table></figure><h2 id="浏览器与JavaScript"><a href="#浏览器与JavaScript" class="headerlink" title="浏览器与JavaScript"></a>浏览器与JavaScript</h2><p>浏览器的全局对象是Window，所有的变量都是window的成员</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> value=<span class="number">12</span>；</span><br><span class="line">alert(<span class="built_in">window</span>.value);</span><br><span class="line"><span class="keyword">for</span> (x <span class="keyword">in</span> <span class="built_in">window</span>)&#123;</span><br><span class="line">    <span class="built_in">window</span>.document.write(<span class="built_in">window</span>[x]+<span class="string">"&lt;/br&gt;"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>JavaScript与浏览器的关系</p><ul><li>放在<code>&lt;script&gt;&lt;/script&gt;</code>标记中间</li><li>放在<code>&lt;srcipt&gt;</code>的src属性中，从外部引入。</li><li>放在HTML某个事件处理器中。</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=&quot;util.js&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><h2 id="事件处理器"><a href="#事件处理器" class="headerlink" title="事件处理器"></a>事件处理器</h2><p>onmouseover和onmouseout事件</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">onmouseover</span>=<span class="string">"alert('hi');"</span> <span class="attr">onmouseout</span>=<span class="string">"alert('bye');"</span> &gt;</span></span><br><span class="line">一个段落</span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><p>body事件onload onunload</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;body onload=&quot;alert(&apos;hi&apos;);&quot; &gt;</span><br><span class="line">一个段落</span><br><span class="line">&lt;/p&gt;</span><br></pre></td></tr></table></figure><h2 id="简单对话框"><a href="#简单对话框" class="headerlink" title="简单对话框"></a>简单对话框</h2><ul><li>alert</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alert(<span class="string">"hello world"</span>);</span><br></pre></td></tr></table></figure><ul><li>confirm</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(confirm(<span class="string">"Yes or No?"</span>))&#123;</span><br><span class="line">    alert(<span class="string">"yes"</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    alert(<span class="string">"no"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>prompt</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">name = prompt(&quot;what is your name?&quot;);</span><br></pre></td></tr></table></figure><h2 id="计时器"><a href="#计时器" class="headerlink" title="计时器"></a>计时器</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> count=<span class="number">10</span>;</span></span><br><span class="line"><span class="undefined">        alert(count);</span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="keyword">function</span> <span class="title">update</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="undefined">            count--;</span></span><br><span class="line"><span class="undefined">            alert(count);</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span> <span class="attr">onLoad</span>=<span class="string">"setInterval('update()',1000);"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>一段<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="Window的控制方法"><a href="#Window的控制方法" class="headerlink" title="Window的控制方法"></a>Window的控制方法</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> count=<span class="number">3</span>;</span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="keyword">function</span> <span class="title">close_small_close</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="undefined">            w.close();</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span> <span class="attr">onLoad</span>=<span class="string">"setInterval('close_small_close()',2000);"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> w=<span class="built_in">window</span>.open(<span class="string">"small.html"</span>,</span></span><br><span class="line"><span class="javascript">                          <span class="string">"small"</span>,</span></span><br><span class="line"><span class="javascript">                          <span class="string">"width=400,height=400,status=yes,resizeable=yes"</span>);</span></span><br><span class="line"><span class="undefined">        w.moveTo(0,0);</span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>一段<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p>关闭window，使用Window.close()，window.location当前的url。如果使用JavaScript改写她，会加载改写的这个URL页面。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="keyword">function</span> <span class="title">jump</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            location=<span class="string">"http://www.baidu.com"</span></span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span> <span class="attr">onLoad</span>=<span class="string">"setInterval('jump()',2000);"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>一段<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="文档对象模型-DOM"><a href="#文档对象模型-DOM" class="headerlink" title="文档对象模型 DOM"></a>文档对象模型 DOM</h2><p>浏览器对象就是window，html页面则是document，里面的内容有五类，页面，表单，表格，链接，图片</p><p>可以通过getElementbyName和getElementbyId</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript"><span class="function"><span class="keyword">function</span> <span class="title">getValue</span>(<span class="params"></span>)</span></span></span><br><span class="line"><span class="undefined">  &#123;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">var</span> x=<span class="built_in">document</span>.getElementById(<span class="string">"myHeader"</span>)</span></span><br><span class="line"><span class="undefined">      alert(x.innerHTML)</span></span><br><span class="line"><span class="undefined">  &#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span> <span class="attr">id</span>=<span class="string">"myHeader"</span> <span class="attr">onclick</span>=<span class="string">"getValue()"</span>&gt;</span>This is a header<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>Click on the header to alert its value<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>操作DOM 进行动作，是JavaScript最好的使用场景。</p><p>以图片对象为例，做出动画片的效果。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span> <span class="attr">onLoad</span>=<span class="string">"setInterval('show()',200)"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">name</span>=<span class="string">"anm"</span> <span class="attr">src</span>=<span class="string">"0.jpg"</span> <span class="attr">width</span>=<span class="string">300</span>&gt;</span><span class="tag">&lt;/<span class="name">img</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> images = <span class="keyword">new</span> <span class="built_in">Array</span>(<span class="number">6</span>);</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> index = <span class="number">1</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">for</span> (<span class="keyword">var</span> i ;i&lt;<span class="number">6</span>;i++)&#123;</span></span><br><span class="line"><span class="javascript">        images[i] = <span class="keyword">new</span> Image();</span></span><br><span class="line"><span class="javascript">        images[i].src = i+<span class="string">".jpg"</span>;</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="javascript">    <span class="function"><span class="keyword">function</span> <span class="title">show</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">document</span>.anm.src = images[index].src;</span></span><br><span class="line"><span class="undefined">        index = (index + 1) % 6;</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>JavaScript则是网页开发的必备选择。我通过网易云的这门课堂，明白了JavaScript的一些理念，对其中的概念不再陌生。对于我现在的学习阶段，问题都很基础，一般来说<a href="http://www.w3school.com.cn" target="_blank" rel="noopener">W3C的网站</a>上都有我的答案。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;JavaScript是一种在浏览器解释执行的代码，网页开发必备。&lt;/p&gt;
    
    </summary>
    
      <category term="tech" scheme="http://yoursite.com/categories/tech/"/>
    
    
      <category term="javascript" scheme="http://yoursite.com/tags/javascript/"/>
    
  </entry>
  
  <entry>
    <title>CSS学习笔记</title>
    <link href="http://yoursite.com/2019/01/09/CSS%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>http://yoursite.com/2019/01/09/CSS学习笔记/</id>
    <published>2019-01-09T13:41:05.000Z</published>
    <updated>2019-01-09T13:53:45.175Z</updated>
    
    <content type="html"><![CDATA[<p>层叠样式表<code>CSS(Cascading Style Sheets)</code>与<code>HTML</code>搭配使用，共同构建前端页面。<code>HTML</code>负责内容，<code>CSS</code>负责显示，<strong>达到了样式与内容的分离。</strong></p><a id="more"></a><h2 id="HTML引入CSS"><a href="#HTML引入CSS" class="headerlink" title="HTML引入CSS"></a>HTML引入CSS</h2><p>三种方式引入<code>CSS</code>，<a href="http://www.w3school.com.cn/html/html_css.asp" target="_blank" rel="noopener">W3C的文章</a>说的很清楚。</p><ul><li><p>外部样式表</p><p>当样式需要被应用到很多页面的时候，外部样式表将是理想的选择。使用外部样式表，你就可以通过更改一个文件来改变整个站点的外观。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">type</span>=<span class="string">"text/css"</span> <span class="attr">href</span>=<span class="string">"mystyle.css"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>内部样式表</p><p>当单个文件需要特别样式时，就可以使用内部样式表。你可以在 head 部分通过 <code>&lt;style&gt;</code>标签定义内部样式表。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">body &#123;background-color: red&#125;</span></span><br><span class="line"><span class="undefined">p &#123;margin-left: 20px&#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>内联样式</p><p>当特殊的样式需要应用到个别元素时，就可以使用内联样式。 使用内联样式的方法是在相关的标签中使用样式属性。样式属性可以包含任何 CSS 属性。以下实例显示出如何改变段落的颜色和左外边距。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">"color: red; margin-left: 20px"</span>&gt;</span></span><br><span class="line">This is a paragraph</span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><p>学习过程中，使用内联样式进行效果演示。</p><h2 id="背景样式"><a href="#背景样式" class="headerlink" title="背景样式"></a>背景样式</h2><p>背景颜色，默认的颜色是<code>transparent</code></p><p>颜色的表示方式有三种：</p><ol><li>文字</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span> <span class="attr">style</span>=<span class="string">"background-color:gray;"</span>&gt;</span></span><br></pre></td></tr></table></figure><ol><li>RGB，红绿蓝三原色。用两个字节来表示，红色<code>#FF0000</code>。</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span> <span class="attr">style</span>=<span class="string">"background-color:#FF0000;"</span>&gt;</span></span><br></pre></td></tr></table></figure><ol><li>另一种是数值<code>rgb(255, 255, 255)</code></li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span> <span class="attr">style</span>=<span class="string">"background-color:rgb(255,0,0);"</span>&gt;</span></span><br></pre></td></tr></table></figure><p><code>CSS3</code>引入了新的一种方式<code>rgba</code>，最后一个参数<code>α</code>可以简单理解为透明度。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span> <span class="attr">style</span>=<span class="string">"background-color:rgba(255,0,0,0.5);"</span>&gt;</span></span><br></pre></td></tr></table></figure><hr><p>背景图片</p><p>背景是图片加上上文的<code>rgba</code>, 可以做出内层的标记浮在背景图片上的效果。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span> <span class="attr">style</span>=<span class="string">"background-image:url(timg1440x900.jpg);"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">"background-color: rgba(255,0,0,0.5)"</span>&gt;</span></span><br><span class="line">    这是第一段</span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p>对于背景图片<code>background-image</code>属性，当使用的图片较小时有一些特点：</p><ul><li>会自动复制进行填充当前页面，</li><li>也可以不重复。</li><li>可以在<code>x</code>和<code>y</code>方向进行重复 <code>repeat-x</code>，<code>repeat-y</code></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span> <span class="attr">style</span>=<span class="string">"background-image:url(timg213x160.jpg);</span></span></span><br><span class="line"><span class="tag"><span class="string">             background-repeat:repeat-x;"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p>当设定为<code>no-repeat</code>时，可以对位置<code>background-position</code>进行设定:</p><ul><li><code>center left top right</code></li><li>绝对位置<code>100px 100px</code></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span> <span class="attr">style</span>=<span class="string">"background-image:url(timg213x160.jpg);</span></span></span><br><span class="line"><span class="tag"><span class="string">             background-repeat:no-repeat;</span></span></span><br><span class="line"><span class="tag"><span class="string">             background-position:top right"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p>默认是让背景图片随着文字一起滚动，可以设定<code>background-attanchment</code>为<code>fixed</code>，即背景则不会随着页面一起滚动。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span> <span class="attr">style</span>=<span class="string">"background-image:url(timg213x160.jpg);</span></span></span><br><span class="line"><span class="tag"><span class="string">             background-attanchment:fixed;"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">"background-color: rgba(255,0,0,0.5)"</span>&gt;</span></span><br><span class="line">    这是第一段</span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    为了看出效果，加很多换行。</span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><hr><p>小结：学习了背景颜色，背景图片一些样式表写法。</p><h2 id="文本样式"><a href="#文本样式" class="headerlink" title="文本样式"></a>文本样式</h2><h3 id="段落"><a href="#段落" class="headerlink" title="段落"></a>段落</h3><p>段落文字的颜色<code>color</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">"color:red"</span>&gt;</span></span><br><span class="line">        我是一个段落</span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p>段落的缩进<code>text-indent</code></p><p>单位可以<code>em(em-quads)</code>和<code>10%</code>这种相对单位。也有<code>px</code>，<code>pt</code>（印刷上的单位<code>=1/72inch</code>）,<code>cm</code>,<code>mm</code>和<code>in</code>这种绝对的单位。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">"text-indent:2em"</span>&gt;</span></span><br><span class="line">        我是一个段落,为了体现缩进，所以我需要说很多很多很多很多很多很多很多很多很多很多很多很多很多很多很多很多很多很多很多的话。</span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p>有趣的一点是，缩进设定为负值。下面的例子是这种可以实现悬挂缩进效果</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">"text-indent:-2em; padding:2em;"</span>&gt;</span></span><br><span class="line">        我是一个段落,为了体现悬挂缩进，所以我需要说很多很多很多很多很多很多很多很多很多很多很多很多很多很多很多很多很多很多很多很多很多很多很多很多很多很多很多很多很多很多很多很多很多很多很多很多很多很多很多很多很多很多很多很多很多很多的话。</span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p>段落的行高<code>line-height</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">"text-indent:2em;line-height:2em;"</span>&gt;</span></span><br><span class="line">        我是一个段落,为了体现行高，所以我需要说很多很多很多很多很多很多很多很多很多很多很多很多很多很多很多很多很多很多很多很多很多很多很多很多很多很多很多很多很多很多很多很多很多很多很多很多很多很多很多很多很多很多很多很多很多很多的话。</span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p>段落对齐方式<code>text-align</code></p><p>对齐方式有<code>align，left，right，center，justify（两端对齐）</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">"text-indent:2em;text-align:right;"</span>&gt;</span></span><br><span class="line">        我是一个段落,为了对齐方式，所以我需要说很多很多很多很多很多很多很多很多很多很多很多很多很多很多很多很多很多很多很多很多很多很多很多很多很多很多很多很多很多很多很多很多很多很多很多很多很多很多很多很多很多很多很多很多很多很多的话。</span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p>段落中空格的宽度<code>word-spacing</code>, 字符间的宽度<code>letter-spacing</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">"text-indent:2em;wrod-spacing:10px; letter-spacing:10px"</span>&gt;</span></span><br><span class="line">        我是一个段落,为了空格的宽度，我要说几个的 空      格。</span><br><span class="line">        为了体现字符间距，我还是要说很多很多很多很多很多很多很多很多很多很多很多很多很多很多很多很多很多很多很多的话。</span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p>段落中文字的大小写转换，<code>text-transform</code></p><p>可以设置为：<code>uppercase(英文转大写), lowercase(英文转小写), capitalize(英文转首字母大写)</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">"text-indent:2em;text-transform:uppercase;"</span>&gt;</span></span><br><span class="line">        我是一个段落,为了体现文字的大小写转换，所以我需要说个hello。</span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p>文字装饰<code>text-decoration</code></p><p> 可以是<code>underline上划线，overline下划线，line-through中横线</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">"text-indent:2em;text-decoration:underline overline"</span>&gt;</span></span><br><span class="line">        我是一个段落,为了体现划线，所以我需要说很多很多很多很多很多很多很多很多很多很多很多很多很多很多很多很多很多很多很多的话。你看这样像不像稿纸的样式？</span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p>对空白字符的处理<code>white-space</code></p><p><code>pre</code>（有多少回车有多少空格全都生效，且不会做自动的卷绕)，</p><p><code>pre-wrap</code>（有多少回车有多少空格全都生效，做自动的卷绕），</p><p><code>nowrap</code>不卷绕,</p><p><code>pre-line</code>合并空格，保留换行</p><h2 id="字体"><a href="#字体" class="headerlink" title="字体"></a>字体</h2><p> 字体的样式<code>font-family</code></p><p>可以指定通用字体的大类，也可以指定具体的字体名称</p><p>通用字体大类</p><ul><li>serif 大多数的英文字体都是serif，矢量字体，有点类似花体，竖线的上有小横线</li><li>sans-serif，竖线上没有小横线</li><li>monospace 等宽字体，用于程序代码和终端输出</li><li>cursive 类似手写的字体，草书</li><li>fantansy 无法归类的字体</li></ul><p>一般的做法是，指定保险的做法是，指定特定的字体，再指定某个通用字体的大类。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">"font-family: Times, TimeNR, serif"</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><p>字体常用属性</p><p><code>font-style</code>: 可设为<code>normal</code>，<code>italic(是使用字体的斜体)</code>，<code>oblique(是让没有斜体属性的字体倾斜)</code></p><p><code>font-variant</code>: 可以变为大小写<code>small-caps</code></p><p><code>font-weight</code>:  笔画宽度，可以设为<code>bold</code>粗体或者数值</p><p><code>font-size</code>: 字体大小，可以设为<code>px em</code>，推荐还是用<code>em</code></p><h2 id="文字效果"><a href="#文字效果" class="headerlink" title="文字效果"></a>文字效果</h2><p>就像以前用word做艺术字的感觉，只不过是换成了代码的方式表达。</p><p>文字阴影效果<code>text-shadow</code></p><p>三个参数，第一个是向右，第二个是向下，第三个是发散的宽度</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">"text-shadow:3px 4px 5px rgba(0,255,0,1)"</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><p>雕刻的效果</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">"text-shadow:0px -1px 0px #000000, 0px 1px 3px #606060; color:#606060"</span>&gt;</span>INSET<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><p>边框<code>outline-style</code></p><p>可以设为:<code>dashed短划线 dotted点线 double双线 groove 凹槽 outset凸的边 inset凹的边</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">"outline-color:red;outline-style:solid;outline-width:thin"</span>&gt;</span>INSET<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h2><p>就是前面那个小黑圆可以换成其他的样式。<code>disc，circle，squre</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span> <span class="attr">style</span>=<span class="string">"list-style-type:squre "</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>Mirror<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>sFlow<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>Security<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p>可以使用自定义的图片</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span> <span class="attr">style</span>=<span class="string">"list-style-image:url(timg213x160.jpeg) "</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>Mirror<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>sFlow<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>Security<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p>小圆点是不是属于文字的一部分，inside属于，outside不属于。只有文字换行时才能看出区别。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span> <span class="attr">style</span>=<span class="string">"list-style-position:outside"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>Mirror<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>sFlow<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>Security<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h2><p>表格的样式，<code>border</code>可以设为实线<code>solid</code></p><p><code>border-collapse</code> 当设为  <code>collapse</code> 效果为当有多余的线的时候，合并为一条线。<code>separate</code>则为一条线</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">table</span> <span class="attr">style</span>=<span class="string">"border: 1px solid blue;border-collapse:collapse;"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">caption</span>&gt;</span>Our Module<span class="tag">&lt;/<span class="name">caption</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span> <span class="attr">style</span>=<span class="string">"border: 1px solid blue"</span>&gt;</span>Mirror<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">th</span> <span class="attr">style</span>=<span class="string">"border: 1px solid blue"</span>&gt;</span>sFlow<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span> <span class="attr">style</span>=<span class="string">"border: 1px solid blue"</span>&gt;</span>Security<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span> <span class="attr">style</span>=<span class="string">"border: 1px solid blue"</span>&gt;</span>200<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span> <span class="attr">style</span>=<span class="string">"border: 1px solid blue"</span>&gt;</span>100<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span> <span class="attr">style</span>=<span class="string">"border: 1px solid blue"</span>&gt;</span>300<span class="tag">&lt;/<span class="name">td</span>&gt;</span>            </span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p>表格可以设置大小</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">th</span> <span class="attr">style</span>=<span class="string">"width:100;height:50px"</span>&gt;</span></span><br></pre></td></tr></table></figure><p>表格中的文字可以规定排版方式</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">th</span> <span class="attr">style</span>=<span class="string">"vertical-align:top;text-align:right"</span>&gt;</span></span><br></pre></td></tr></table></figure><p><code>padding</code> 可以指定和边线之间的距离，框模型中可以深刻理解一下。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">th</span> <span class="attr">style</span>=<span class="string">"vertical-align:top;text-align:right;width:100px;height:50px;padding:20px"</span>&gt;</span></span><br></pre></td></tr></table></figure><p>对于表格的标题的位置，可以指定<code>caption-side</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">style</span>=<span class="string">"caption-side:bottom;"</span>&gt;</span></span><br></pre></td></tr></table></figure><p><code>table-layout</code> 设为<code>automatic</code>对于大表就会有点慢，也会不断变化。<code>fixed</code>由第一行来指定表格的大小显示，可以很快地显示出来。</p><h2 id="框模型"><a href="#框模型" class="headerlink" title="框模型"></a>框模型</h2><p>框模型又叫盒模型</p><p>CSS 框模型 (Box Model) 规定了元素框处理。看这篇<a href="http://www.w3school.com.cn/css/css_boxmodel.asp" target="_blank" rel="noopener">W3C的解释文章</a>，可以加深理解。</p><p><strong>简而言之，元素内容、内边距、边框和外边距这四者之间的关系。</strong></p><p><code>padding</code>就是内边距，<code>margin</code>就是外边距。每一个元素都是一个框框。</p><p>可以指定四边的边距<code>padding-top:10</code>，也可以分别指定边距<code>padding:10 20 30 40</code> , 不是上下左右，而是上右下左（顺时针方向）</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">"margin:10px 20px 30px 40px"</span>&gt;</span>一个段落，和上右下左其他的元素都隔开10，20，30，40<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><p><code>padding</code>不能设为负值，<code>margin</code>是允许负值的。当两个相邻的元素的<code>margin</code>一起，则是取二者大的那个值</p><h2 id="CSS-定位"><a href="#CSS-定位" class="headerlink" title="CSS 定位"></a>CSS 定位</h2><p>HTML是一种流式的排版格式，所有的元素是从左往右，从上往下流式地填满，以前的定位是通过表格来实现的。<strong>CSS定位，就是将某一个块状的元素放置到某个固定的位置。</strong>CSS1就已经提出元素是浮动的。如果要对CSS元素定位，方式有三种方式的定位：相对定位，绝对定位</p><p>浮动定位。</p><ul><li>相对定位</li></ul><p>不管<code>margin</code>的事实，会在元素该有的地方，进行偏移。原来的第二行的位置不会受影响</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">"position:relative;"</span>&gt;</span></span><br><span class="line">我是第一段</span><br><span class="line">        <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">我是第二段</span><br><span class="line">        <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>绝对定位</li></ul><p>会把元素从原有的流式定位上去掉。然后第一段的定位是从不断找父元素，<code>div</code>未定位，<code>body</code>定位了，则显示在<code>body</code>的位置上。第二段则会因为第一段从流式定位的去除，则到第一位上。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">"position:absolute;"</span>&gt;</span></span><br><span class="line">我是第一段</span><br><span class="line">        <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">我是第二段</span><br><span class="line">        <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><p>浮动定位</p><p>会将某个元素永远定在一个地方。压缩页面，它会挤占原来的元素，CSDN那种讨厌的广告应该就是这个原理。</p></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"timg213x160.jpg"</span> <span class="attr">style</span>=<span class="string">"float:right"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">"position:absolute;"</span>&gt;</span></span><br><span class="line">我是第一段</span><br><span class="line">        <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">我是第二段</span><br><span class="line">        <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p><code>div</code>是一种块状元素。<code>span</code>是一种行内的块状元素。<code>h5</code>出现了很多的不同名字的<code>div</code>，比如<code>slide</code>，<code>header</code>，<code>foot</code>等，这些块状元素就用来结合定位技术使用。</p></blockquote><h2 id="CSS选择器"><a href="#CSS选择器" class="headerlink" title="CSS选择器"></a>CSS选择器</h2><p><strong>选择器就是选定某些标记，对其的样式进行管理。</strong></p><p>元素选择器最后呈现的效果是叠加的</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">        p,th,td &#123;border: 1px solid blue&#125;</span></span><br><span class="line"><span class="undefined">        p &#123;background:red&#125;</span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br></pre></td></tr></table></figure><p>类选择器</p><p><code>*.important</code>的意思是所有类名<code>class</code>为<code>important</code>的元素</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">        p,th,td &#123;border: 1px solid blue&#125;</span></span><br><span class="line"><span class="undefined">        p &#123;background:green&#125;</span></span><br><span class="line"><span class="undefined">        *.important &#123;color:red&#125;</span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"important"</span>&gt;</span>我是一个class为important的paragraph<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>我是普通的paragraph<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>我是普通的paragraph<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p><code>p.important</code>则是所有<code>id</code>为<code>important</code>的<code>p</code></p><p><code>#important</code>则是指id选择器，用<code>#</code>而不是用<code>.</code>来进行选择</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">        p,th,td &#123;border: 1px solid blue&#125;</span></span><br><span class="line"><span class="undefined">        p &#123;background:green&#125;</span></span><br><span class="line"><span class="undefined">        *#important &#123;color:red&#125;</span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">"important"</span>&gt;</span>我是一个class为import的paragraph<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>我是普通的paragraph<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>我是普通的paragraph<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p>有<code>title</code>这个属性的标记。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">        p,th,td &#123;border: 1px solid blue&#125;</span></span><br><span class="line"><span class="undefined">        p &#123;background:green&#125;</span></span><br><span class="line"><span class="undefined">        *[title]&#123;color:red&#125;</span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">"important"</span>&gt;</span>我是一个class为important的paragraph<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">title</span>=<span class="string">"paragraph with title"</span>&gt;</span>我是有title的paragraph<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>我是普通的paragraph<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p>子元素选择器</p><p><code>p em</code>这种情况是子选择器，<code>p&gt;em</code>则p标签一定是em的上级标签。<code>h1+p</code>则对p标签相邻的em标签</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">        p,th,td &#123;border: 1px solid blue&#125;</span></span><br><span class="line"><span class="undefined">        p em &#123;background:green&#125;</span></span><br><span class="line"><span class="undefined">        *[title]&#123;color:red&#125;</span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">"important"</span>&gt;</span>我是一个class为import的paragraph<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">title</span>=<span class="string">"paragraph with title"</span>&gt;</span>我是普通的paragraph<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>我是<span class="tag">&lt;<span class="name">em</span>&gt;</span>普通<span class="tag">&lt;/<span class="name">em</span>&gt;</span>的paragraph<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p>超链接所涉及到的伪类</p><figure class="highlight plain"><figcaption><span>&#123;color:#FFFFFF&#125; 已访问</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">a:link &#123;color:#FF0000&#125; 点击时</span><br><span class="line">a:hover &#123;color:#00FF00&#125; 悬停时</span><br><span class="line">a:active &#123;color:#0000FF&#125; 未访问</span><br><span class="line">a:visited &#123;color:#FFFFFF&#125; 已访问</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">        a &#123;color:#000000;&#125;</span></span><br><span class="line"><span class="undefined">        a:visited &#123;color:#FFFFFF&#125;</span></span><br><span class="line"><span class="undefined">        a:link &#123;color:#FF0000&#125;</span></span><br><span class="line"><span class="undefined">        a:hover &#123;color:#00FF00&#125;</span></span><br><span class="line"><span class="undefined">        a:active &#123;color:#0000FF&#125;</span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://www.baidu.com"</span>&gt;</span>百度<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://news.163.com"</span>&gt;</span>网易<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://news.qq.com"</span>&gt;</span>qq<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://news.sohu.com"</span>&gt;</span>搜狐<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://news.yahoo.com"</span>&gt;</span>雅虎<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>了解一些<code>CSS</code>常见用法。知道了<code>HTML</code>如何引入<code>CSS</code>，背景样式，段落样式，文字样式，表格样式，<code>CSS</code>框模型，<code>CSS</code>选择器。</p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ol><li><a href="https://study.163.com/course/introduction/190001.htm" target="_blank" rel="noopener">翁恺的CSS3课程</a></li><li><a href="http://www.w3school.com.cn/cssref/index.asp" target="_blank" rel="noopener">W3C的CSS参考</a></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;层叠样式表&lt;code&gt;CSS(Cascading Style Sheets)&lt;/code&gt;与&lt;code&gt;HTML&lt;/code&gt;搭配使用，共同构建前端页面。&lt;code&gt;HTML&lt;/code&gt;负责内容，&lt;code&gt;CSS&lt;/code&gt;负责显示，&lt;strong&gt;达到了样式与内容的分离。&lt;/strong&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="tech" scheme="http://yoursite.com/categories/tech/"/>
    
    
      <category term="web CSS" scheme="http://yoursite.com/tags/web-CSS/"/>
    
  </entry>
  
  <entry>
    <title>HTML学习笔记</title>
    <link href="http://yoursite.com/2019/01/09/html-note/"/>
    <id>http://yoursite.com/2019/01/09/html-note/</id>
    <published>2019-01-09T13:31:57.000Z</published>
    <updated>2019-01-09T13:39:56.274Z</updated>
    
    <content type="html"><![CDATA[<p>HTML(HyperText Markup Language)超文本标记语言，可以理解为是一种排版语言，用来表示文本和图片以及连接在浏览器上如何显示。</p><a id="more"></a><p>HTML是各个浏览器厂家来进行形成事实上的标准，通过W3C形成规范文本。</p><blockquote><p>早期的dos系统只有三个字母的文件后缀，所以.html有时候又是.htm。</p></blockquote><h2 id="学习准备"><a href="#学习准备" class="headerlink" title="学习准备"></a>学习准备</h2><p>准备文本编辑器和浏览器即可。IDE可以管理不同页面间的关系，提供所见即所得的功能。学习阶段应专注，不需要。</p><h2 id="HTML语言框架"><a href="#HTML语言框架" class="headerlink" title="HTML语言框架"></a>HTML语言框架</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>我的页面<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">utf-8</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    我的第一个html页面</span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>以上是HTML的一个基本框架。</p><ul><li>尖括号中表示这是一个HTML的标记。</li><li><code>&lt;head&gt;</code>表示这是源文件的头，放置此源页面相关配置，例如编码格式。</li><li><code>&lt;body&gt;</code>是显示的正文</li><li><code>&lt;!DOCTYPE html&gt;</code>是表示页面支持html5的规范</li></ul><h2 id="标记"><a href="#标记" class="headerlink" title="标记"></a>标记</h2><p>最新的H5规范，HTML标记用来告诉浏览器，此标记是什么，而不是告诉浏览器这个该怎么显示。该怎么显示由CSS样式层叠表来管理。例如html中的段落标记和标题标记等，提供了整个页面的逻辑结构。避免设计上的冗余。应该记住几个最基本的标记。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span> 段落 paragraph</span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>&gt;</span> 换行 break</span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span><span class="tag">&lt;/<span class="name">h1</span>&gt;</span> 标题 header</span><br></pre></td></tr></table></figure><h2 id="字体样式"><a href="#字体样式" class="headerlink" title="字体样式"></a>字体样式</h2><p>虽然由CSS来进行样式管理，但是仍然存在用来表达格式的HTML语法。当然，也可以理解为这是一种类型，意为加粗的文字。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">b</span>&gt;</span><span class="tag">&lt;/<span class="name">b</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">i</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tt</span>&gt;</span><span class="tag">&lt;/<span class="name">tt</span>&gt;</span>等宽的西文字体</span><br><span class="line"><span class="tag">&lt;<span class="name">del</span>&gt;</span><span class="tag">&lt;/<span class="name">del</span>&gt;</span>中横线，本质上是被删掉的字符</span><br><span class="line"><span class="tag">&lt;<span class="name">ins</span>&gt;</span><span class="tag">&lt;/<span class="name">ins</span>&gt;</span>下划线，本质上是增加的字符，具体的显示都由浏览器表示</span><br><span class="line"><span class="tag">&lt;<span class="name">s</span>&gt;</span><span class="tag">&lt;/<span class="name">s</span>&gt;</span>不推荐的，过时的</span><br><span class="line"><span class="tag">&lt;<span class="name">sup</span>&gt;</span><span class="tag">&lt;/<span class="name">sup</span>&gt;</span>上标</span><br><span class="line"><span class="tag">&lt;<span class="name">sub</span>&gt;</span><span class="tag">&lt;/<span class="name">sub</span>&gt;</span>下标 公式最好还是用其他软件做好，作为图片嵌入</span><br><span class="line"><span class="tag">&lt;<span class="name">mark</span>&gt;</span><span class="tag">&lt;/<span class="name">mark</span>&gt;</span>强调，表现为高亮</span><br></pre></td></tr></table></figure><h2 id="短语样式"><a href="#短语样式" class="headerlink" title="短语样式"></a>短语样式</h2><p>html5引入了一些短语格式，用来表示文字的意义。这些都是短语样式，所以不会引起分行。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">em</span>&gt;</span>强调<span class="tag">&lt;/<span class="name">em</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">strong</span>&gt;</span>着重<span class="tag">&lt;/<span class="name">strong</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">cite</span>&gt;</span>引用<span class="tag">&lt;/<span class="name">cite</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">code</span>&gt;</span>代码<span class="tag">&lt;/<span class="name">code</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">kbd</span>&gt;</span>用户输入<span class="tag">&lt;/<span class="name">kbd</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">samp</span>&gt;</span>示例代码<span class="tag">&lt;/<span class="name">samp</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">var</span>&gt;</span>变量<span class="tag">&lt;/<span class="name">var</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dfn</span>&gt;</span>定义<span class="tag">&lt;/<span class="name">dfn</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="特殊格式"><a href="#特殊格式" class="headerlink" title="特殊格式"></a>特殊格式</h2><p>有一些特殊的格式，也比较常用，可以记住</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">address</span>&gt;</span><span class="tag">&lt;/<span class="name">address</span>&gt;</span> 地址</span><br><span class="line"><span class="tag">&lt;<span class="name">blockquote</span>&gt;</span><span class="tag">&lt;/<span class="name">blockquote</span>&gt;</span>缩进</span><br><span class="line"><span class="tag">&lt;<span class="name">q</span>&gt;</span><span class="tag">&lt;/<span class="name">q</span>&gt;</span> 小引用，一般表现为加一个小引号</span><br><span class="line"><span class="tag">&lt;<span class="name">pre</span>&gt;</span><span class="tag">&lt;/<span class="name">pre</span>&gt;</span> 预格式化，原样输出,保留换行和空格</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">code</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">pre</span>&gt;</span></span><br><span class="line">int main()&#123;</span><br><span class="line">printf("Hello\n");</span><br><span class="line">return 0;</span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">pre</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">code</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="属性"><a href="#属性" class="headerlink" title="属性"></a>属性</h2><p>对于各个标记，都可以添加属性。属性值之前是必须要加双引号，但是现在不必加。不过我看了一下各个页面，基本上大家都还是加上了的。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">hr</span> <span class="attr">width</span>=<span class="string">50%</span> <span class="attr">align</span>=<span class="string">left</span> <span class="attr">size</span>=<span class="string">10</span>&gt;</span> 分割线，显示的效果靠左，50%页面，线的宽度为10 </span><br><span class="line"><span class="tag">&lt;<span class="name">abbr</span> <span class="attr">title</span>=<span class="string">"中华人民共和国"</span>&gt;</span>PRC<span class="tag">&lt;/<span class="name">abbr</span>&gt;</span> 缩写 鼠标放在PRC上时，会出现提示。title这个属性各个标记都有。</span><br></pre></td></tr></table></figure><h2 id="转义字符"><a href="#转义字符" class="headerlink" title="转义字符"></a>转义字符</h2><p>常用的转义字符，以下四个可以记住。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&amp;lt; 小于号</span><br><span class="line">&amp;gt; 大于号</span><br><span class="line">&amp;amp; and符号</span><br><span class="line">&amp;nbsp; 不可打断的空格</span><br></pre></td></tr></table></figure><h2 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h2><p>三种列表在HTML中的使用。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>Mirror<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>sFlow<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>Security<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span> 无序列表</span><br><span class="line"><span class="tag">&lt;<span class="name">ol</span> <span class="attr">start</span>=<span class="string">2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>Mirror<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>sFlow<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>Security<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ol</span>&gt;</span> 有序列表</span><br><span class="line"><span class="tag">&lt;<span class="name">dl</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dt</span>&gt;</span>Mirror<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dd</span>&gt;</span>端口镜像<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dt</span>&gt;</span>sFlow<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dd</span>&gt;</span>端口采样<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dt</span>&gt;</span>Security<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dd</span>&gt;</span>安全<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dl</span>&gt;</span> 定义列表，类似字典</span><br></pre></td></tr></table></figure><h2 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h2><ul><li>图片一般支持三种格式，<code>png,jpg,gif</code>。</li><li>对于浏览器来说，img标记就是一个字符，我们不加其他的样式指定，则会与其他字符并排在一起。</li><li>如果指定了图片大小，那么浏览器在图片尚未加载完成的时候会预先留出图片的位置。</li><li>在图片较大，alt属性会在图片尚未加载完成的时候，显示在对应的位置。</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"example.gif"</span> <span class="attr">alt</span>=<span class="string">"hint"</span> <span class="attr">height</span>=<span class="string">"500"</span> <span class="attr">width</span>=<span class="string">"500"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">src</span>=<span class="string">"www.baidu.com"</span>&gt;</span><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span> 内联框架，可以直接嵌入一个网页。</span><br></pre></td></tr></table></figure><h2 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h2><p>链接是最常用的HTML标记。其中的属性href，一定要把协议<code>http://</code>加上，否则浏览器会认为是当前路劲下的一个文件。属性target=”_blank”，表示在新的页面打开。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://www.baidu.com"</span>&gt;</span>我是一个链接<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><p>可以使用ID和#进行页面内具体某个标记位置的精确定位。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#page_end"</span>&gt;</span>导航到页面尾部<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">"page_end"</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h2><p>基础的表格使用，记住三个元素，表格table，行tr，列td</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>Mirror<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>200<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>Tianshan<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>sFlow<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>100<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>Tianshan<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure><p>这样显示出来没有格式。可以加一点格式，boder是表格的线宽，th是表头，caption是表格的标题。td可以使用colspan来占据一行.</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">"1"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">caption</span>&gt;</span>我是表格的标题<span class="tag">&lt;/<span class="name">caption</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">th</span>&gt;</span>Module<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>Case<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>PIC<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>Mirror<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>200<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>Tianshan<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>sFlow<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>100<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>Tianshan<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span> <span class="attr">colspan</span>=<span class="string">"3"</span>&gt;</span>DTEL<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure><p>H5增加了thead，tbody，tfoot三个标记，当表格过长的时候，上下滑动，表头和表尾可以不消失。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">"1"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">caption</span>&gt;</span>我是表格的标题<span class="tag">&lt;/<span class="name">caption</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">thead</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>Module<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>Case<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>PIC<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">thead</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tbody</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>Mirror<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>200<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>Tianshan<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>sFlow<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>100<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>Tianshan<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tfoot</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span> <span class="attr">colspan</span>=<span class="string">"3"</span>&gt;</span>DTEL<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tfoot</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>根据浙江大学翁恺老师的HTML教程学习的学习笔记。我是在MOOC上学到的C语言翁恺老师教程。他讲的很清楚，也很实用。</p><p>我明白了以下知识点：</p><ul><li>HTML负责标记和组织页面上的内容是什么，如何显示由CSS决定</li><li>HTML基本框架结构</li><li>HTML标记，标记的属性</li><li>记住了常用的HTML标记</li></ul><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ol><li><a href="https://study.163.com/course/courseMain.htm?courseId=171001" target="_blank" rel="noopener">翁恺老师HTML教程</a></li><li><a href="http://www.w3school.com.cn/" target="_blank" rel="noopener">w3school教程</a></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;HTML(HyperText Markup Language)超文本标记语言，可以理解为是一种排版语言，用来表示文本和图片以及连接在浏览器上如何显示。&lt;/p&gt;
    
    </summary>
    
      <category term="tech" scheme="http://yoursite.com/categories/tech/"/>
    
    
      <category term="web html" scheme="http://yoursite.com/tags/web-html/"/>
    
  </entry>
  
  <entry>
    <title>给亲爱的一封信</title>
    <link href="http://yoursite.com/2018/12/30/to-my-lvoe/"/>
    <id>http://yoursite.com/2018/12/30/to-my-lvoe/</id>
    <published>2018-12-30T06:02:15.000Z</published>
    <updated>2018-12-30T06:12:09.500Z</updated>
    
    <content type="html"><![CDATA[<p>在博客上给亲爱的写情书，没有别人看，只有你在看，其实也是挺幸福的一件事情。</p><a id="more"></a><p>又是情书，又是博客，如何将这二者结合，这便成了问题。本文旨在分享我和亲爱的的爱情中有关计算机的部分，技术层面很粗糙，是个总结，也指明今年的发展方向。</p><h1 id="解决电脑问题表达爱"><a href="#解决电脑问题表达爱" class="headerlink" title="解决电脑问题表达爱"></a>解决电脑问题表达爱</h1><p>普通的活动认识，但是由于是计算机学院的人，电脑出了问题得找到我头上。我和亲爱的认识，肯定不是因为重装系统，但是和各种电脑问题分不开。</p><h2 id="激活系统"><a href="#激活系统" class="headerlink" title="激活系统"></a>激活系统</h2><p>激活系统在网络上有很多的下载，但是由于涉及版权，自然没有大厂能提供软件下载链接。这便开始考验我的搜索能力和分辨网络上良莠不齐的资源的能力。百度搜素<code>小马激活</code>即可，不排除风险，但是对于我们普通用户能够满足需求。</p><p>当初正是凭借着一个激活软件，稳稳地树立了在亲爱的心目中<strong>计算机学院学长</strong>的形象。</p><h2 id="安装软件"><a href="#安装软件" class="headerlink" title="安装软件"></a>安装软件</h2><p>那么常用软件的靠谱安装包一定要备份一下，如果能够稳定提供下载的软件那么不必备份。但是安装完成后，不必安装太全，因为确实也装不全。这时，主动沟通，你需要什么软件，这才是正确的方法。</p><p>当初就是靠着一个PS安装包，坐稳了在亲爱的心中的<strong>靠谱学长</strong>形象。哈哈！</p><h2 id="重装系统"><a href="#重装系统" class="headerlink" title="重装系统"></a>重装系统</h2><p>在激活系统事件之后，我便意识到，不会点这些技术完全不能行走江湖。不能行走江湖我无所谓，但是形象毁了那可就严重了。重装系统由于其操作炫酷，解决问题实际，看起来工作量大，是必备的技术。所以，我各种研究，还忍痛把自己的笔记本正版系统抹掉，学习了重装系统。果然，后面不仅帮亲爱的重装过系统，还帮亲爱的的同学装过，亲爱的的姐夫装过。。。坐稳了亲爱的心目中<strong>修电脑高科技人才</strong>的形象甚至到了公司，还是装过。网上的教程很多，两点自己的个人经验。</p><ol><li><p>系统镜像下载</p><p>官方下载慢的坑爹，站点 <a href="https://msdn.itellyou.cn/" target="_blank" rel="noopener"><code>itellyou</code></a>获得大家一致好评。</p></li><li><p>安装U盘制作</p><p>不要使用大白菜、老毛桃，<a href="https://cn.ultraiso.net/xiazai.html" target="_blank" rel="noopener">软碟通</a>是最佳的选择。</p></li><li><p>数据备份</p><p>安装之前一定告知用户C盘将被格式化备份数据，否则好心办坏了事就惨啦。</p></li></ol><h1 id="print方法表达爱"><a href="#print方法表达爱" class="headerlink" title="print方法表达爱"></a>print方法表达爱</h1><p>解决具体问题能够让生活顺畅，但是不还得浪漫嘛。此时可以使用常见的打印方法来展示理工科男生的浪漫。打印其实程序调试的方法，但是简单粗暴，且给人极客的感觉。当初就是凭借这些技能，坐稳了在亲爱的心目中<strong>编程大神</strong>的形象，侧面也显示我这个人不傻，以后是很浪漫的。</p><h2 id="Excel-画心形线"><a href="#Excel-画心形线" class="headerlink" title="Excel 画心形线"></a>Excel 画心形线</h2><p><code>Excel</code>在基本上都有，所以不存在运行环境的问题。但是缺点就是极客范要少一点。网上的教程简直不要太多。略加搜索，制作完成后，拷贝发送即可。现在再搜搜，大家都已经进化啦，心形线画的更加好看。我当初的Excel还是被亲爱的保存的好好的，也是一份当初的美好。</p><h2 id="编程语言画心形线"><a href="#编程语言画心形线" class="headerlink" title="编程语言画心形线"></a>编程语言画心形线</h2><p><code>Excel</code>由于是常见的软件，所以你再画的再漂亮，别人也不觉得很厉害。所以，通过学习C语言，在控制台打印心形线，黑框框就是黑客的象征。网上找段程序员炫技的打印代码，调试运行，展示给亲爱的看，此时还是得表现出这都是低级技术的样子，才能坐稳亲爱的头一把交椅。来段代码吧。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">float</span> y=<span class="number">1.5f</span>; y&gt;<span class="number">-1.5f</span>; y-=<span class="number">0.1f</span>)&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">float</span> x=<span class="number">-1.5f</span>; x&lt;<span class="number">1.5f</span>; x+=<span class="number">0.05f</span>)&#123;</span><br><span class="line">            <span class="keyword">float</span> a=x*x+y*y<span class="number">-1</span>;</span><br><span class="line">            <span class="built_in">putchar</span>(a*a*a-x*x*y*y*y&lt;=<span class="number">0.0f</span>?<span class="string">'*'</span>:<span class="string">' '</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">putchar</span>(<span class="string">'\n'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="单片机"><a href="#单片机" class="headerlink" title="单片机"></a>单片机</h2><p>学自动化，玩了几天开发板。当时亲爱的说别的学院的同学能够让显示屏显示字，我当时就怒了，这有什么了不起。但是开发板不在，赶紧把<code>Proteus</code>调出来，分分钟在模拟软件上使用51单片机与1602显示屏打印了一个<code>woaiyimeiduo</code>，当场就把亲爱的给感动坏了。我也当时牛逼坏了。哈哈~充分说明大家学习东西，一定要活学活用，只要青春脑子灵，不断加深好感情。</p><h1 id="软件表达爱"><a href="#软件表达爱" class="headerlink" title="软件表达爱"></a>软件表达爱</h1><p>在随后的日子里，随着我技术的提升，渐渐脱离了<code>print</code>的低级趣味，同时遇见了<code>Python</code>，简直就是打开了新世界的大门。我尝试了画词云图，微信发送消息催起床，帮忙处理<code>Excel</code>数据等。但，我个人觉得这些都没有脱离前面的方法表达爱，没有脱离低级趣味。而且，亲爱的也提升了自己，对我这些雕虫小技已经开始不屑一顾了。我的光辉形象已经不太稳，吹牛骗不了她了。今天特此写这篇博客，要开发一个Web站点，在上面用漂亮的页面记录和亲爱的感情。站点短期肯定是搞不定啦，不还是要上班和陪亲爱的耍嘛。这篇博客能够在公网上访问，所以，也算数啦。今年加油学好Web技术，就能改善这个尴尬的局面，让亲爱的满意。</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>这篇博客写于胖胖的生日前夕，用来纪念我们的爱情。作为一个程序员，以最真挚的方式来表达对胖胖的爱。胖胖肯定特别感动。嘿嘿，喵喵！</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在博客上给亲爱的写情书，没有别人看，只有你在看，其实也是挺幸福的一件事情。&lt;/p&gt;
    
    </summary>
    
      <category term="life" scheme="http://yoursite.com/categories/life/"/>
    
    
      <category term="love" scheme="http://yoursite.com/tags/love/"/>
    
  </entry>
  
  <entry>
    <title>Python进阶</title>
    <link href="http://yoursite.com/2018/10/31/Python%E8%BF%9B%E9%98%B6%E4%B8%80/"/>
    <id>http://yoursite.com/2018/10/31/Python进阶一/</id>
    <published>2018-10-31T14:52:19.000Z</published>
    <updated>2018-10-31T15:11:02.914Z</updated>
    
    <content type="html"><![CDATA[<p>在熟悉了python的基本语法后，通过不断地实践，越发地爱上了这门语言。需要深入地理解和用好它。<br><a id="more"></a><br>在学习<a href="https://www.python.org/dev/peps/pep-0008/" target="_blank" rel="noopener">PEP 8</a>相关文档过程中，获得了一份很好的<a href="http://safehammad.com/downloads/python-idioms-2014-01-16.pdf" target="_blank" rel="noopener">文档</a>，里面介绍了几个tips，值得python新手进阶的时候学习。</p><h2 id="What’s-an-Idiom"><a href="#What’s-an-Idiom" class="headerlink" title="What’s an Idiom"></a>What’s an Idiom</h2><p>Idioms我觉得在这里叫惯用语最合适，指的是使用python的过程中符合python哲学的“正确”做法。通俗一点可以叫套路，高雅一点可以叫范式。相比错误的做法，采用这些idioms，有以下好处。</p><ol><li>可读性高</li><li>执行效率高</li><li>内存占用少</li></ol><h2 id="让程序可执行亦可引入"><a href="#让程序可执行亦可引入" class="headerlink" title="让程序可执行亦可引入"></a>让程序可执行亦可引入</h2><p>代码如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">if __name__ == &apos;__main__&apos;:</span><br></pre></td></tr></table></figure></p><p>这句代码让该脚本能够在cmd中python xxx.py执行，也可以作为一个 module 被别的代码进行import。</p><h2 id="正确地判断布尔值"><a href="#正确地判断布尔值" class="headerlink" title="正确地判断布尔值"></a>正确地判断布尔值</h2><p>代码如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">if x:</span><br><span class="line">if not x:</span><br></pre></td></tr></table></figure></p><p>不要像C语言那样各种判断，python的数据类型都进行了封装。例如：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"># GOOD</span><br><span class="line">name = &apos;Safe&apos;</span><br><span class="line">pets = [&apos;Dog&apos;, &apos;Cat&apos;, &apos;Hamster&apos;]</span><br><span class="line">owners = &#123;&apos;Safe&apos;: &apos;Cat&apos;, &apos;George&apos;: &apos;Dog&apos;&#125; </span><br><span class="line">if name and pets and owers:</span><br><span class="line">    print(&quot;we have pets&quot;)</span><br><span class="line">    </span><br><span class="line"># NOT SO GOOD</span><br><span class="line">if name != &apos;&apos; and len(pets) &gt; 0 and owers != &#123;&#125;:</span><br><span class="line">    print(&quot;we have pets&quot;)</span><br></pre></td></tr></table></figure></p><p>不必在判断非空这件事情上浪费代码。</p><h2 id="使用-in"><a href="#使用-in" class="headerlink" title="使用 in"></a>使用 in</h2><p>代码如下:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># container</span><br><span class="line">if item in items:</span><br><span class="line"># iteration</span><br><span class="line">for item in items:</span><br></pre></td></tr></table></figure></p><p>分别举例说明一下。</p><h3 id="a-容器"><a href="#a-容器" class="headerlink" title="a. 容器"></a>a. 容器</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># GOOD</span><br><span class="line">name = &apos;Safe Hammad&apos;</span><br><span class="line">if &apos;H&apos; in name:</span><br><span class="line">    print(&quot;ok&quot;)</span><br><span class="line"></span><br><span class="line"># NOT SO GOOD</span><br><span class="line">if name.find(&apos;H&apos;)! = -1:</span><br><span class="line">    print(&quot;ok&quot;)</span><br></pre></td></tr></table></figure><p>这样的写法，阅读很清晰。能够在内置的数据类型中使用（包括列表，字典，集合，字符串）。封装的类，如果实现了<strong>contains</strong> 方法，也可以实现。</p><h3 id="b-迭代器"><a href="#b-迭代器" class="headerlink" title="b. 迭代器"></a>b. 迭代器</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"># GOOD</span><br><span class="line">pets = [&apos;Dog&apos;, &apos;Cat&apos;, &apos;Hamster&apos;]</span><br><span class="line">for pet in pets</span><br><span class="line">    print(pet)</span><br><span class="line"></span><br><span class="line"># NOT SO GOOD</span><br><span class="line">i = 0</span><br><span class="line">while i &lt; len(pets):</span><br><span class="line">    print(&apos;A&apos;, pets[i], &apos;can be very cute!&apos;)</span><br><span class="line">    i += 1</span><br></pre></td></tr></table></figure><p>这样的写法,代码更加简洁。同样在内置的数据类型中使用。封装的类，如果实现了<strong>iter</strong> 方法，也可以实现。这极大地简化了for循环的语句。</p><h2 id="交换变量"><a href="#交换变量" class="headerlink" title="交换变量"></a>交换变量</h2><p>代码如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a, b = b, a</span><br></pre></td></tr></table></figure></p><p>不必再像C语言使用temp变量进行交换，减少代码。</p><h2 id="使用序列生成字符串"><a href="#使用序列生成字符串" class="headerlink" title="使用序列生成字符串"></a>使用序列生成字符串</h2><p>代码如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&apos;&apos;.join(some_strings)</span><br></pre></td></tr></table></figure></p><p>相比使用+拼接字符串，时间复杂度更低。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># GOOD</span><br><span class="line">chars = [&apos;S&apos;, &apos;a&apos;, &apos;f&apos;, &apos;e&apos;]</span><br><span class="line">name = &apos;&apos;.join(chars)</span><br><span class="line">print(name)</span><br><span class="line"></span><br><span class="line"># NOT SO GOOD</span><br><span class="line">chars = [&apos;S&apos;, &apos;a&apos;, &apos;f&apos;, &apos;e&apos;]</span><br><span class="line">name = &apos;&apos;</span><br><span class="line">for char in chars:</span><br><span class="line">    name += char</span><br><span class="line">print(name)</span><br></pre></td></tr></table></figure></p><h2 id="捕获异常"><a href="#捕获异常" class="headerlink" title="捕获异常"></a>捕获异常</h2><p>代码如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">try:</span><br><span class="line">except:</span><br></pre></td></tr></table></figure></p><p>这里有个概念，鸭子类型（duck typing）。它指的是，如果一个对象，走路像鸭子，叫声像鸭子，那么它一定是鸭子。这是面向对象中的多态（polymorphism）的理论。使用异常而不是使用if来进行各种判断检查，将把我们通过写代码排除各种特殊情况中解放出来。<br>例如：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"># GOOD</span><br><span class="line">d = &#123;&apos;x&apos;: &apos;5&apos;&#125;</span><br><span class="line">try:</span><br><span class="line">    value = int(d[&apos;x&apos;])</span><br><span class="line">except (KeyError, TypeError, ValueError):</span><br><span class="line">    value = None</span><br><span class="line"># NOT SO GOOD</span><br><span class="line">if &apos;x&apos; in d and \</span><br><span class="line">    isinstance(d[&apos;x&apos;], str) and \</span><br><span class="line">    d[&apos;x&apos;].isdigit():</span><br><span class="line">    value = int(d[&apos;x&apos;])</span><br><span class="line">else:</span><br><span class="line">    value = None</span><br></pre></td></tr></table></figure></p><h2 id="枚举"><a href="#枚举" class="headerlink" title="枚举"></a>枚举</h2><p>代码如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">for i, item in enumerate(items):</span><br></pre></td></tr></table></figure></p><p>当既需要遍历容器内的元素，又需要容器内元素的下标时，这个方法便派上用场了。</p><h2 id="表达式来构建列表"><a href="#表达式来构建列表" class="headerlink" title="表达式来构建列表"></a>表达式来构建列表</h2><p>代码如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[i * 3 for i in data if i &gt; 10]</span><br></pre></td></tr></table></figure></p><p>对于一些比较简单的变换，这种方法非常简洁。如果太复杂，还是使用常规的for+if的语句。我认为判断的依据在于该语句是否太长而影响可读性。</p><h2 id="zip创建字典"><a href="#zip创建字典" class="headerlink" title="zip创建字典"></a>zip创建字典</h2><p>代码如下<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">d = dict(zip(keys, values))</span><br></pre></td></tr></table></figure></p><p>代码简洁，避免使用循环进行创建。</p><h2 id="使用-接收无用变量"><a href="#使用-接收无用变量" class="headerlink" title="使用 _ 接收无用变量"></a>使用 _ 接收无用变量</h2><p>代码如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">for k, _ in [(&apos;a&apos;, 1), (&apos;b&apos;, 2), (&apos;c&apos;, 3)]</span><br></pre></td></tr></table></figure></p><p>对于元组中的数值我们不需要，那么使用下划线来接收。如果是以下形式：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">for k, j in [(&apos;a&apos;, 1), (&apos;b&apos;, 2), (&apos;c&apos;, 3)]</span><br></pre></td></tr></table></figure></p><p>难免阅读者会去考虑变量j的用途，影响可读性。</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>这些idioms很有帮助。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">if __name__ == &apos;__main__&apos;:</span><br><span class="line"></span><br><span class="line">if x:</span><br><span class="line">if not x:</span><br><span class="line"></span><br><span class="line"># container</span><br><span class="line">if item in items:</span><br><span class="line"># iteration</span><br><span class="line">for item in items:</span><br><span class="line"></span><br><span class="line">a, b = b, a</span><br><span class="line"></span><br><span class="line">for k, _ in [(&apos;a&apos;, 1), (&apos;b&apos;, 2), (&apos;c&apos;, 3)]</span><br></pre></td></tr></table></figure><p>这些我现在已经深刻理解，成为我的python代码风格一部分，</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&apos;&apos;.join(some_strings)</span><br><span class="line"></span><br><span class="line">try:</span><br><span class="line">except:</span><br><span class="line"></span><br><span class="line">d = dict(zip(keys, values))</span><br><span class="line"></span><br><span class="line">for i, item in enumerate(items):</span><br><span class="line"></span><br><span class="line">[i * 3 for i in data if i &gt; 10]</span><br></pre></td></tr></table></figure><p>这些我还需要继续熟悉之中。</p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ol><li><a href="http://safehammad.com/downloads/python-idioms-2014-01-16.pdf" target="_blank" rel="noopener">http://safehammad.com/downloads/python-idioms-2014-01-16.pdf</a></li><li><a href="https://docs.python.org/3.1/howto/doanddont.html" target="_blank" rel="noopener">https://docs.python.org/3.1/howto/doanddont.html</a></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在熟悉了python的基本语法后，通过不断地实践，越发地爱上了这门语言。需要深入地理解和用好它。&lt;br&gt;
    
    </summary>
    
      <category term="tech" scheme="http://yoursite.com/categories/tech/"/>
    
    
      <category term="python coding rule" scheme="http://yoursite.com/tags/python-coding-rule/"/>
    
  </entry>
  
  <entry>
    <title>git学习笔记</title>
    <link href="http://yoursite.com/2018/10/21/git%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>http://yoursite.com/2018/10/21/git学习笔记/</id>
    <published>2018-10-20T20:00:49.000Z</published>
    <updated>2018-10-21T04:15:04.837Z</updated>
    
    <content type="html"><![CDATA[<p>git是版本控制工具，程序员必备技能。以前在学校的时候自己跟着教程学习过，现在在工作中已经用了一段时间了。在此进行总结和复习。<br><a id="more"></a></p><h1 id="git的初始化操作"><a href="#git的初始化操作" class="headerlink" title="git的初始化操作"></a>git的初始化操作</h1><p>我通过一系列的命令对操作进行复习和解释。</p><ul><li><p>安装git后，需要指定用户名和邮箱</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git config --global user.name &quot;s********a&quot;</span><br><span class="line">$ git config --global user.email &quot;3**********.com&quot;</span><br></pre></td></tr></table></figure></li><li><p>git init会初始化一个本次仓库</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mkdir git_test</span><br><span class="line">cd git_test</span><br><span class="line">git init</span><br></pre></td></tr></table></figure></li></ul><h1 id="git-提交文件"><a href="#git-提交文件" class="headerlink" title="git 提交文件"></a>git 提交文件</h1><ul><li>git add 添加文件</li><li><p>git commit 将文件提交至版本库</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">touch readme.txt</span><br><span class="line">git add readme.txt</span><br><span class="line">git commit -m &quot;first commit&quot;</span><br></pre></td></tr></table></figure></li><li><p>git log 查看多次提交的版本文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">sssdembp:git_test sss$ git log</span><br><span class="line">commit 81e27beccb5576f2e02f90ad2c373d8a7341268e (HEAD -&gt; master)</span><br><span class="line">Author: stshihia &lt;379187038@qq.com&gt;</span><br><span class="line">Date:   Sun Oct 21 08:51:41 2018 +0800</span><br><span class="line"></span><br><span class="line">    first commit</span><br></pre></td></tr></table></figure></li></ul><h1 id="回退版本"><a href="#回退版本" class="headerlink" title="回退版本"></a>回退版本</h1><p>在Git中，用HEAD表示当前版本,上一个版本就是HEAD^<br>一般使用git log 查看版本的 commit id<br>通过<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git reset --hard 81e27beccb5576f2e02f90ad2c373d8a7341268e</span><br></pre></td></tr></table></figure></p><p>来回退到某个版本</p><h1 id="暂存区和工作区"><a href="#暂存区和工作区" class="headerlink" title="暂存区和工作区"></a>暂存区和工作区</h1><p>关于暂存区和工作区, 工作区就是我们能看见的目录。</p><blockquote><p>第一步是用git add把文件添加进去，实际上就是把文件修改添加到暂存区；<br>第二步是用git commit提交更改，实际上就是把暂存区的所有内容提交到当前分支。</p></blockquote><p>有了暂存区，那么平时我们可以add多次，将多次改动累计到一次进行commit操作。因为git是管理修改，而不是管理文件的。</p><p>如果要删除某个文件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">rm readme.txt</span><br><span class="line">git rm readme.txt</span><br><span class="line">git commit -m &quot;remove readme.txt&quot;</span><br></pre></td></tr></table></figure></p><p>远程库的名字就是origin，这是Git默认的叫法<br>HEAD严格来说不是指向提交，而是指向master</p><h1 id="分支"><a href="#分支" class="headerlink" title="分支"></a>分支</h1><p>分支是版本库之下的一个概念，一个版本库可以有多个分支，<br>修改的提交时基于当前的分支的，切换分支后，会看不见之前分支的修改<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">git branch dev 创建分支</span><br><span class="line">git branch 查看分支</span><br><span class="line">git checkout dev 切换分支</span><br><span class="line">git merge dev 合并分支到当前分支</span><br><span class="line">git branch -d dev</span><br></pre></td></tr></table></figure></p><p>合并分支会需要解决冲突，解决冲突就是编辑冲突的文件重新git add并commit提交。能够看出，基于文件的工作流是最为方便的，不会存在冲突，也不会在协作中出现相互覆盖。</p><p>分支管理策略</p><blockquote><p>在实际开发中，我们应该按照几个基本原则进行分支管理：<br>首先，master分支应该是非常稳定的，也就是仅用来发布新版本，平时不能在上面干活；<br>那在哪干活呢？干活都在dev分支上，也就是说，dev分支是不稳定的，到某个时候，比如1.0版本发布时，再把dev分支合并到master上，在master分支发布1.0版本；<br>你和你的小伙伴们每个人都在dev分支上干活，每个人都有自己的分支，时不时地往dev分支上合并就可以了。</p></blockquote><p>这种策略还是不好，如果不基于文件进行管理，会需要解决大量的冲突，在团队协作中增加许多工作量。<br>在实际工作中，我们是通过git clone多个库文件，然后checkout 来实现不同分支的管理的。但是我们是测试团队，对代码的要求要低很多。</p><p>推送是基于分支的<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git remote -v 查看远端库地址</span><br><span class="line">git pull 拉取远端的仓库</span><br><span class="line">git push origin master 推送本地至master分支</span><br></pre></td></tr></table></figure></p><p>git clone 只会看见master分支，需要看见远端其他分支则需要本地创建, git push 也一样<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git checkout -b dev origin/dev</span><br><span class="line">$ git push origin dev</span><br></pre></td></tr></table></figure></p><h1 id="标签tag"><a href="#标签tag" class="headerlink" title="标签tag"></a>标签tag</h1><p>标签就是指向某个commit的指针（跟分支很像对不对？但是分支可以移动，标签不能移动）<br>切换到想打标签的分支，找到想打标签的commit<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git tag v1.0 &lt;commit-id&gt;</span><br><span class="line">git tag 列出所有标签</span><br></pre></td></tr></table></figure></p><p>有点麻烦的是标签不是按照时间排序的</p><h1 id="搭建本地git-服务器"><a href="#搭建本地git-服务器" class="headerlink" title="搭建本地git 服务器"></a>搭建本地git 服务器</h1><p>通过树莓派，可以方便地进行实验<br>安装git<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install git-core</span><br></pre></td></tr></table></figure></p><p>创建git用户<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo adduser git</span><br><span class="line">password:g***i</span><br></pre></td></tr></table></figure></p><p>此时在树莓派的pi用户路径下面新建一个git repo即可进行clone操作<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cd /home/pi</span><br><span class="line">mkdir git_test</span><br><span class="line">cd git_test</span><br><span class="line">git init</span><br></pre></td></tr></table></figure></p><p>在本地进行clone<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone git@192.168.1.6:/home/git/git_test</span><br></pre></td></tr></table></figure></p><p>但是每次进行git clone需要输入密码</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>关于git这样的工具，重点在于使用。但是使用过一段时间之后的总结，才会让自己有所提升。</p><p>我自己工作中的一些感受:</p><ul><li>解决冲突很麻烦，协作中，最好已基于文件的方式进行合作</li><li>稳定的master分支一定要保证</li><li>由于提交会很多，开发重要节点打tag很重要</li><li>常用的命令会总结，不常用的命令会查询</li></ul><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><blockquote><p><a href="https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000" target="_blank" rel="noopener">https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;git是版本控制工具，程序员必备技能。以前在学校的时候自己跟着教程学习过，现在在工作中已经用了一段时间了。在此进行总结和复习。&lt;br&gt;
    
    </summary>
    
      <category term="tech" scheme="http://yoursite.com/categories/tech/"/>
    
    
      <category term="git learn" scheme="http://yoursite.com/tags/git-learn/"/>
    
  </entry>
  
  <entry>
    <title>搭建我的Hexo博客</title>
    <link href="http://yoursite.com/2018/10/11/%E6%90%AD%E5%BB%BA%E6%88%91%E7%9A%84Hexo%E5%8D%9A%E5%AE%A2/"/>
    <id>http://yoursite.com/2018/10/11/搭建我的Hexo博客/</id>
    <published>2018-10-11T07:08:19.000Z</published>
    <updated>2018-10-21T04:07:50.600Z</updated>
    
    <content type="html"><![CDATA[<p>一直有计划搭建我自己的博客，使用了Hexo进行实现。<br><a id="more"></a><br>后面在进行选择的时候，考虑了下面几种。</p><ul><li><p>WordPress</p><p> 这是一种PHP框架，适合快速建站，对编程的要求较低，适合帮别人搭建网站，但是不容易定制，PHP语言较老。</p></li><li><p>Django和flask</p><p>  Python的web框架，功能齐全，但是学习的时间较长</p></li><li><p>Hexo</p><p> hexo很有极客范，网上教程很多，搭建简单，只能搭建静态博客，没有后台。</p></li></ul><p>PHP语言我不感兴趣，Django和flask近期也没有时间学。Hexo搭建简单，能够让我专注在博客撰写的本身，而且不需要购买域名，果断选择Hexo。我是在树莓派上进行搭建Hexo的环境搭建的。本篇博客大概分为四个部分：</p><ol><li>树莓派环境搭建</li><li>Hexo环境搭建</li><li>Hexo主题配置</li><li>部署至github</li></ol><h3 id="安装树莓派系统"><a href="#安装树莓派系统" class="headerlink" title="安装树莓派系统"></a>安装树莓派系统</h3><p>树莓派是一块小型的电脑主板，非常适合用于linux环境学习和开发。</p><p>a. 系统镜像下载地址!</p><blockquote><p><a href="https://www.raspberrypi.org/downloads/raspbian" target="_blank" rel="noopener">https://www.raspberrypi.org/downloads/raspbian</a></p></blockquote><p>b. 使用win32diskimager将系统烧写至内存卡</p><p>c. 在目录新建一个ssh的文件夹，允许进行ssh连接</p><h3 id="Hexo基础环境配置"><a href="#Hexo基础环境配置" class="headerlink" title="Hexo基础环境配置"></a>Hexo基础环境配置</h3><p>将内存卡插入树莓派上电就是一个linux 环境</p><p>安装git</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install git-core</span><br></pre></td></tr></table></figure><p>安装nvm，安装完成后需要reboot设备<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wget -qO- https://raw.github.com/creationix/nvm/master/install.sh | sh</span><br><span class="line">reboot</span><br></pre></td></tr></table></figure></p><p>安装npm<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nvm install stable</span><br></pre></td></tr></table></figure></p><p>安装Hexo<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure></p><p>至此 Hexo环境便搭好了，试用一下<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">hexo init BlogTest</span><br><span class="line">cd BlogTest</span><br><span class="line">hexo g</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure></p><p>此时在浏览器中输入树莓派IP加默认端口地址( <a href="http://192.168.1.4:4000" target="_blank" rel="noopener">http://192.168.1.4:4000</a> )，便能够访问生成的博客</p><h3 id="博客主题配置"><a href="#博客主题配置" class="headerlink" title="博客主题配置"></a>博客主题配置</h3><p>Hexo有很多主题，Next是非常流行的一个</p><p>安装Next<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd your-hexo-site</span><br><span class="line">git clone https://github.com/iissnan/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure></p><p>各种配置其实都基本是修改这两个文件</p><ul><li><p>主目录下的站点配置文件 /_config.yml文件</p></li><li><p>主题目录下的主题配置文件 /themes/next/_config.yml文件</p></li></ul><p>下面介绍以下的配置</p><ul><li><p>配置站点主题</p><p>  修改站点配置文件</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">theme: next</span><br></pre></td></tr></table></figure></li><li><p>配置主题语言</p><p>  修改站点配置文件</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">language: zh-Hans</span><br></pre></td></tr></table></figure></li><li><p>配置主题风格</p><p>  修改主题配置文件</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#scheme: Muse</span><br><span class="line">#scheme: Mist</span><br><span class="line">scheme: Pisces</span><br></pre></td></tr></table></figure></li><li><p>配置子页面</p><p>  Next提供以下类别的页面</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">menu:</span><br><span class="line">  home: 首页</span><br><span class="line">  archives: 归档</span><br><span class="line">  categories: 分类</span><br><span class="line">  tags: 标签</span><br><span class="line">  about: 关于</span><br><span class="line">  search: 搜索</span><br><span class="line">  commonweal: 公益404</span><br><span class="line">  something: 有料</span><br></pre></td></tr></table></figure><p>  我选择启用<br>  home, archives, tags, categories, about, search 这六种页面。</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo new page tags</span><br><span class="line">hexo new page about</span><br><span class="line">hexo new page categories</span><br></pre></td></tr></table></figure><p>  页面内容还需要后续添加完善</p></li><li><p>配置主题搜索功能</p><p>  添加本地自定义站点内容搜索(Local search)</p><p>  首先安装 hexo-generator-searchdb，在站点的根目录下执行以下命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-searchdb --save</span><br></pre></td></tr></table></figure><p>  编辑站点配置文件，新增以下内容置：</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">search:</span><br><span class="line">path: search.xml</span><br><span class="line">   field: post</span><br><span class="line">   format: html</span><br><span class="line">   limit: 10000</span><br></pre></td></tr></table></figure><p>  编辑主题配置文件，启用本地搜索功能： </p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Local search</span><br><span class="line">local_search:</span><br><span class="line">enable: true</span><br></pre></td></tr></table></figure></li></ul><p>还有其他的一些配置，可以访问官方文档进行查看</p><h3 id="博客部署至GitHub"><a href="#博客部署至GitHub" class="headerlink" title="博客部署至GitHub"></a>博客部署至GitHub</h3><ol><li><p>配置本地git的用户名和邮箱</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name “stshihia”</span><br><span class="line">git config --global user.email “379187038@qq.com”</span><br></pre></td></tr></table></figure><p> 查看配置是否成功</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config user.name</span><br><span class="line">git config user.email</span><br></pre></td></tr></table></figure></li><li><p>生成本地rsa密钥用于与github网站相连接</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &apos;379187038@qq.com&apos;</span><br><span class="line">vim /home/pi/.ssh/id_rsa.pub</span><br><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure><p> 可以查看其内容并贴到自己的github 密钥上, 通过ssh验证是否成功连接</p></li><li>修改站点配置文件<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: git@github.com:stshihia/stshihia.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure></li></ol><p>输入<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo generate</span><br><span class="line">hexo deploy</span><br></pre></td></tr></table></figure></p><ol start="4"><li>Github账户注册和新建项目，项目必须要遵守格式：账户名.github.io<br>至此，访问博客地址 <a href="https://stshihia.github.io/" target="_blank" rel="noopener">https://stshihia.github.io/</a> 即可</li></ol><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>一些个人的经验总结：</p><ol><li>熟悉了Hexo框架，前端的世界还挺好玩的。</li><li>bilibili上能找到不错的资源</li><li>先找博客了解大概，然后通过视频进行学习操作细节，再通过博客来查漏补缺，最后官方文档可以进行查询。</li></ol><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><blockquote><p><a href="https://www.cnblogs.com/fengxiongZz/p/7707219.html" target="_blank" rel="noopener">https://www.cnblogs.com/fengxiongZz/p/7707219.html</a></p></blockquote><blockquote><p><a href="http://theme-next.iissnan.com/" target="_blank" rel="noopener">http://theme-next.iissnan.com/</a></p></blockquote><blockquote><p><a href="https://www.bilibili.com/video/av17653359?from=search&amp;seid=11432917052424913522" target="_blank" rel="noopener">https://www.bilibili.com/video/av17653359?from=search&amp;seid=11432917052424913522</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;一直有计划搭建我自己的博客，使用了Hexo进行实现。&lt;br&gt;
    
    </summary>
    
      <category term="tech" scheme="http://yoursite.com/categories/tech/"/>
    
    
      <category term="hexo learn" scheme="http://yoursite.com/tags/hexo-learn/"/>
    
  </entry>
  
</feed>
